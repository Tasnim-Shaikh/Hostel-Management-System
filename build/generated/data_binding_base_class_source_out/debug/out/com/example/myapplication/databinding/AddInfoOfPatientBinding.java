// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddInfoOfPatientBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout attendanceLayout;

  @NonNull
  public final Button btnShowAbsent;

  @NonNull
  public final Button btnShowPresent;

  @NonNull
  public final EditText etDate;

  @NonNull
  public final RecyclerView recyclerViewAttendance;

  private AddInfoOfPatientBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout attendanceLayout, @NonNull Button btnShowAbsent,
      @NonNull Button btnShowPresent, @NonNull EditText etDate,
      @NonNull RecyclerView recyclerViewAttendance) {
    this.rootView = rootView;
    this.attendanceLayout = attendanceLayout;
    this.btnShowAbsent = btnShowAbsent;
    this.btnShowPresent = btnShowPresent;
    this.etDate = etDate;
    this.recyclerViewAttendance = recyclerViewAttendance;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddInfoOfPatientBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddInfoOfPatientBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_info_of_patient, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddInfoOfPatientBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout attendanceLayout = (LinearLayout) rootView;

      id = R.id.btnShowAbsent;
      Button btnShowAbsent = ViewBindings.findChildViewById(rootView, id);
      if (btnShowAbsent == null) {
        break missingId;
      }

      id = R.id.btnShowPresent;
      Button btnShowPresent = ViewBindings.findChildViewById(rootView, id);
      if (btnShowPresent == null) {
        break missingId;
      }

      id = R.id.etDate;
      EditText etDate = ViewBindings.findChildViewById(rootView, id);
      if (etDate == null) {
        break missingId;
      }

      id = R.id.recyclerViewAttendance;
      RecyclerView recyclerViewAttendance = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAttendance == null) {
        break missingId;
      }

      return new AddInfoOfPatientBinding((LinearLayout) rootView, attendanceLayout, btnShowAbsent,
          btnShowPresent, etDate, recyclerViewAttendance);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
