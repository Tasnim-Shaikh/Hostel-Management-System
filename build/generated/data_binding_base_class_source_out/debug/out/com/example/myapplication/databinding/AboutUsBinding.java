// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AboutUsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView appInfo;

  @NonNull
  public final TextView appName;

  @NonNull
  public final TextView appOverview;

  @NonNull
  public final TextView contactInfo;

  @NonNull
  public final Button tutorialButton;

  private AboutUsBinding(@NonNull RelativeLayout rootView, @NonNull TextView appInfo,
      @NonNull TextView appName, @NonNull TextView appOverview, @NonNull TextView contactInfo,
      @NonNull Button tutorialButton) {
    this.rootView = rootView;
    this.appInfo = appInfo;
    this.appName = appName;
    this.appOverview = appOverview;
    this.contactInfo = contactInfo;
    this.tutorialButton = tutorialButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AboutUsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AboutUsBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.about_us, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AboutUsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_info;
      TextView appInfo = ViewBindings.findChildViewById(rootView, id);
      if (appInfo == null) {
        break missingId;
      }

      id = R.id.app_name;
      TextView appName = ViewBindings.findChildViewById(rootView, id);
      if (appName == null) {
        break missingId;
      }

      id = R.id.app_overview;
      TextView appOverview = ViewBindings.findChildViewById(rootView, id);
      if (appOverview == null) {
        break missingId;
      }

      id = R.id.contact_info;
      TextView contactInfo = ViewBindings.findChildViewById(rootView, id);
      if (contactInfo == null) {
        break missingId;
      }

      id = R.id.tutorial_button;
      Button tutorialButton = ViewBindings.findChildViewById(rootView, id);
      if (tutorialButton == null) {
        break missingId;
      }

      return new AboutUsBinding((RelativeLayout) rootView, appInfo, appName, appOverview,
          contactInfo, tutorialButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
