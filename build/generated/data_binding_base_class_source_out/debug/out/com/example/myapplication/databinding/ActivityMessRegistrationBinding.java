// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMessRegistrationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnMess1;

  @NonNull
  public final Button btnMess2;

  @NonNull
  public final Button btnMess3;

  @NonNull
  public final TextView m1;

  @NonNull
  public final TextView m2;

  @NonNull
  public final TextView m3;

  @NonNull
  public final TextView tvHeader;

  private ActivityMessRegistrationBinding(@NonNull LinearLayout rootView, @NonNull Button btnMess1,
      @NonNull Button btnMess2, @NonNull Button btnMess3, @NonNull TextView m1,
      @NonNull TextView m2, @NonNull TextView m3, @NonNull TextView tvHeader) {
    this.rootView = rootView;
    this.btnMess1 = btnMess1;
    this.btnMess2 = btnMess2;
    this.btnMess3 = btnMess3;
    this.m1 = m1;
    this.m2 = m2;
    this.m3 = m3;
    this.tvHeader = tvHeader;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMessRegistrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMessRegistrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_mess_registration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMessRegistrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnMess1;
      Button btnMess1 = ViewBindings.findChildViewById(rootView, id);
      if (btnMess1 == null) {
        break missingId;
      }

      id = R.id.btnMess2;
      Button btnMess2 = ViewBindings.findChildViewById(rootView, id);
      if (btnMess2 == null) {
        break missingId;
      }

      id = R.id.btnMess3;
      Button btnMess3 = ViewBindings.findChildViewById(rootView, id);
      if (btnMess3 == null) {
        break missingId;
      }

      id = R.id.m1;
      TextView m1 = ViewBindings.findChildViewById(rootView, id);
      if (m1 == null) {
        break missingId;
      }

      id = R.id.m2;
      TextView m2 = ViewBindings.findChildViewById(rootView, id);
      if (m2 == null) {
        break missingId;
      }

      id = R.id.m3;
      TextView m3 = ViewBindings.findChildViewById(rootView, id);
      if (m3 == null) {
        break missingId;
      }

      id = R.id.tvHeader;
      TextView tvHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvHeader == null) {
        break missingId;
      }

      return new ActivityMessRegistrationBinding((LinearLayout) rootView, btnMess1, btnMess2,
          btnMess3, m1, m2, m3, tvHeader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
